[tox]
envlist = py27, py33, py34, py35, py36
[testenv]
deps =
    pytest>=2.3.5, < 3.3
    pytest-cache
# docopt for sith doctests
    docopt
# coloroma for colored debug output
    colorama
    -rrequirements.txt
passenv = JEDI_TEST_ENVIRONMENT
setenv =
# https://github.com/tomchristie/django-rest-framework/issues/1957
# tox corrupts __pycache__, solution from here:
    PYTHONDONTWRITEBYTECODE=1
# To test Jedi in different versions than the same Python version, set a
# different test environment.
    env27: JEDI_TEST_ENVIRONMENT=27
    env33: JEDI_TEST_ENVIRONMENT=33
    env34: JEDI_TEST_ENVIRONMENT=34
    env35: JEDI_TEST_ENVIRONMENT=35
    env36: JEDI_TEST_ENVIRONMENT=36
    env37: JEDI_TEST_ENVIRONMENT=37
commands =
    py.test {posargs:jedi test}
[testenv:py27]
deps =
# for testing the typing module
    typing
# numpydoc for typing scipy stack
    numpydoc
    {[testenv]deps}
[testenv:py33]
deps =
    typing
    {[testenv]deps}
[testenv:py34]
deps =
    typing
    numpydoc
    {[testenv]deps}
[testenv:py35]
deps =
    numpydoc
    {[testenv]deps}
[testenv:py36]
deps =
    numpydoc
    {[testenv]deps}
[testenv:cov]
deps =
    coverage
    numpydoc
    {[testenv]deps}
commands =
    coverage run --source jedi -m py.test
    coverage report
[testenv:sith]
commands =
    {envpython} -c "import os; a='{envtmpdir}'; os.path.exists(a) or os.makedirs(a)"
    {envpython} sith.py --record {envtmpdir}/record.json random {posargs:jedi}
